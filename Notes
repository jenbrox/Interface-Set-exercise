For: SortedSet<String> wordsList = new TreeSet<String>();
Since we had to implement the program with an interface set I chose a SortedSet interface with the TreeSet data structure so that it would automatically create the 
Tree in ascending order.

public class TreeSet<E>:
A NavigableSet implementation based on a TreeMap. The elements are ordered using their natural ordering, or by a Comparator provided at set creation time, depending on 
which constructor is used. This implementation provides guaranteed log(n) time cost for the basic operations (add, remove and contains).
Note that the ordering maintained by a set (whether or not an explicit comparator is provided) must be consistent with equals if it is to correctly implement the Set interface.

public interface SortedSet<E>:
A Set that further provides a total ordering on its elements. The elements are ordered using their natural ordering, or by a Comparator typically provided at sorted 
set creation time. The set's iterator will traverse the set in ascending element order. Several additional operations are provided to take advantage of the ordering. 
